"""
Django settings for setup project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path, os
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = str(os.getenv('SECRET_KEY'))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'apps.galeria.apps.GaleriaConfig',
    'apps.usuarios.apps.UsuariosConfig',

    'storages',  #adcionado por conta da biblioteca django-storage

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'setup.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'setup.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


#AWS CONIFGURAÇÃO (COMO DITO NAS INSTRUÇÕES, ESTAMOS USANDO AWS,S3,IAM, BIBLIOTECAS BOTO3 E django-storage)

AWS_ACESS_KEY_ID = 'COLOQUE-AQUI-A-CHAVE-DE-ACESSO-DO-IAM'

AWS_SECRET_ACCESS_KEY = 'COLOQUE-AQUI-A-CHAVE-SECRETA-DE-ACESSO-DO-IAM'

AWS_STORAGE_BUCKET_NAME = 'COLOQUE-AQUI-O-NOME-DO-BUCKET-S3'

AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com' #f para converter, dps das chaves é o resto da url padrão do s3

AWS_DEFAULT_ACL = 'public-read' #definido dentro do AWS, dai bota o tipo q tem lá, geralmente é esse

AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl' : 'max-age=86400' #definição de cache, esse controle é uma config padrão
}

AWS_LOCATION = 'static' #depende de cada projeto, nesse em especifico está nesse memo

AWS_QUERYSTRING_AUTH = False #config padrão, sla

AWS_HEADERS = {
    'Access-Control-Allow-Origin' : '*' #controle de headers, nesse caso está controlando todos
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
#PARA INTEGRAÇÃO COM O AWS, ESSA PARTE DE STATIC SERÁ ALTERADA, SE QUISER VER COMO É SEM AWS, CHECK A MASTER BRANCH
#Alterando aqui, temos que mexer em todos os path statics (css e assets), tirando a barra da frente: "/styles/style.css" to "styles/style.css"

#esses dois são necessários para a integração com o s3 usando o django-storage
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'

STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'setup/static')
]

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

#Media
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') #MODIFICADO

MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#messages
from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.ERROR: 'danger',
    messages.SUCCESS: 'success',
    50: 'critical',
}
